apiVersion: v1
kind: PersistentVolume
metadata:
  name: hwk8s-gogo-pv
  namespace: hwk8s-ns
spec:
  capacity:
    storage: 5Gi 
  hostPath: #укажем путь до локальной папки
    path: >-
      /media/akozlov/06b9b68a-882f-4f94-ad63-4c9e75de88f35/projects/hwandk8s/hwk8s-gogo-volume
    type: DirectoryOrCreate #если нет папки то создадим
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem    
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hwk8s-gogo-pvc
  namespace: hwk8s-ns
spec:
  storageClassName: local-storage
  volumeName: hwk8s-gogo-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: hwk8s-go-s
  namespace: hwk8s-ns
spec:
  type: NodePort
  selector:
    app: hwk8s-gogo
  ports:
    - port: 80
      nodePort: 30056 #для внешнего подключения
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hwk8s-gogo-dep
  namespace: hwk8s-ns
  labels:
    app: hwk8s-gogo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hwk8s-gogo
  template:
    metadata:
      labels:
        app: hwk8s-gogo
    spec:
      volumes:
        - name: hwk8s-gogo-pvc-v
          persistentVolumeClaim:
            claimName: hwk8s-gogo-pvc
      containers:
        - name: hwk8s-gogo-pod
          image: golang:latest                                  
          ports:
          - containerPort: 80          
          volumeMounts:
            - name: hwk8s-gogo-pvc-v
              mountPath: /go/tmp/src
          resources:
            requests:
              memory: 1Gi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 250m          
